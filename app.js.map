{"version":3,"sources":["app.ts"],"names":[],"mappings":"AAEA,YAAY,CAAC;AACb,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AACpC,IAAO,IAAI,WAAW,MAAM,CAAC,CAAC;AAC9B,IAAO,IAAI,WAAW,MAAM,CAAC,CAAC;AAE9B,IAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,IAAO,UAAU,WAAW,aAAa,CAAC,CAAC;AAC3C,IAAO,YAAY,WAAW,cAAc,CAAC,CAAC;AAE9C,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AAGpB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAC1C,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC;AAEjC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,IAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3D,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAGxD,EAAE,CAAC,CAAC,aAAa,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAC5B,CAAC;AAED,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;IAC3B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,wBAAwB,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC","file":"app.js","sourcesContent":["/// <reference path=\"./typings/tsd.d.ts\"/>\n\n\"use strict\"; \nimport express = require('express');\nimport http = require('http');\nimport path = require('path');\nimport favicon = require('serve-favicon');\nimport morgan = require('morgan');\nimport bodyparser = require('body-parser');\nimport errorHandler = require('errorhandler');\n\nvar app = express();\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.use(morgan('dev'));\napp.use(bodyparser.json());\napp.use(bodyparser.urlencoded());\n//app.use(express.methodOverride());\napp.use(app.router);\n\nimport stylus = require('stylus');\napp.use(stylus.middleware(path.join(__dirname, 'public')));\napp.use(express.static(path.join(__dirname, 'public')));\n\n// development only\nif ('development' == app.get('env')) {\n    app.use(errorHandler());\n}\n\napp.get('/', function (req, res) {\n    res.sendfile(path.join(__dirname + '/public/app/index.html'));\n});\n\nhttp.createServer(app).listen(app.get('port'), function () {\n    console.log('Express server listening on port ' + app.get('port'));\n});\n"],"sourceRoot":"/source/"}